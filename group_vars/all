---
# ---------------------------------------------------
# Ansible
# ---------------------------------------------------

# The path of the anaconda installation on the remote host
conda_path: '/opt/conda'

# The path to the package managers pip and conda to use remotly
pip_executable: '{{ conda_path }}/bin/pip'
conda_executable: '{{ conda_path }}/bin/conda'
python_executable: '{{ conda_path }}/bin/python'

# The path to pip used by ansible
ansible_pip_executable: '{{ ansible_python_interpreter }}/bin/pip'

# ---------------------------------------------------
# Versions to install
# ---------------------------------------------------

anaconda_version: '5.1.0'
jupyterhub_version: '0.8.1'

# ------------------------------------------------------------------------------
# JupyteHub settings
# ------------------------------------------------------------------------------

# The base directory of user accounts.
home_dir: '/home'

# Users with administrative privileges.
jupyterhub_admin_users:
  - 'instructor1'
  - 'instructor2'

# Whitelist of jupyterhub users.
jupyterhub_users:
  - 'instructor1'
  - 'instructor2'
  - 'grader1'
  - 'grader2'
  - 'student1'
  - 'student2'

# A list of jupyterhub groups to create, each with a list of members.
jupyterhub_groups:
  - {
      name: "group1",
      members: ["instructor1", "grader1"]
    }
  - {
      name: "group2",
      members: ["instructor2", "grader2"]
    }

# Whether to redirect users to JuptyerLab (/lab) by default
jupyterlab_default: true

# R kernel installation, set to true to enable.
install_r_kernel: false

# bash kernel installation, set to true to enable
install_bash_kernel: false

# Cleanup single user servers and the proxy on jupyterhub shutdown. Setting
# this to false, will allow jupyterhub to be restarted while leaving the proxy
# and single user servers running.
cleanup_on_shutdown: false

# ------------------------------------------------------------------------------
# OAuth
# ------------------------------------------------------------------------------

# The default authentication will use PAM, which is the standard UNIX password
# standard. In the default configuration UNIX usernames and passwords will be
# used for JupyterHub. Enabling OAuth through an OAuth provider (such as GitHub)
# will enable users to log in using their username and passwords from the OAuth
# provider. In this case, new users can be added using the JupyterHub Admin
# page, and the users' home directories will be automatically created.

# Set to `true` to enable.
use_oauth: false

# The OAuth callback URL.
oauth_callback_url: https://mydomain.org/hub/oauth_callback

# The OAuth client ID.
oauth_client_id: ''

# The OAuth client secret.
oauth_client_secret: ''